---
- name: WP installed?
  command: wp core is-installed --allow-root
  args:
    chdir: "{{ www_root }}/{{ item.key }}/current/"
  register: site_statuses
  ignore_errors: True
  with_dict: wordpress_sites

- name: Install WP
  command: wp core install
           --allow-root
           --url="{{ item.item.value.env.wp_home }}"
           --title="{{ item.item.value.site_title | default(item.item.key) }}"
           --admin_user="{{ item.item.value.admin_user }}"
           --admin_password="{{ item.item.value.admin_password }}"
           --admin_email="{{ item.item.value.admin_email }}"
  args:
    chdir: "{{ www_root }}/{{ item.item.key }}/current/"
  with_items: site_statuses.results
  when: item.rc == 1 and item.item.value.site_install == True and item.item.value.multisite.enabled|default(False) == False
  notify: reload nginx

- name: Install WP Multisite
  command: wp core multisite-install
           --allow-root
           --url="{{ item.item.value.env.wp_home }}"
           --base="{{ item.item.value.multisite.base_path | default('/') }}"
           --subdomains="{{ item.item.value.multisite.subdomains | default('false') }}"
           --title="{{ item.item.value.site_title | default(item.item.key) }}"
           --admin_user="{{ item.item.value.admin_user }}"
           --admin_password="{{ item.item.value.admin_password }}"
           --admin_email="{{ item.item.value.admin_email }}"
  args:
    chdir: "{{ www_root }}/{{ item.item.key }}/current/"
  with_items: site_statuses.results
  when: item.rc == 1 and item.item.value.site_install == True and item.item.value.multisite.enabled|default(False) == True
  notify: reload nginx
